{"ast":null,"code":"var _jsxFileName = \"E:\\\\DAW2\\\\Desarrollo WEB CLIENTE\\\\UNIDAD 5\\\\Pr\\xE1ctica506\\\\src\\\\Componentes\\\\ListaNaves.js\";\nimport React from \"react\";\n\n//Componente que mapea los datos que recibe y pinta la lista de naves de un actor.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListaNaves(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box6\",\n      className: \"item2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Naves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), props.datos.length !== 0 ? props.datos.map((v, i, a) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"nave\",\n          id: v.value.url,\n          onClick: () => {\n            props.funcionNave(v.value.url); //Función para obtener los datos de una nave.\n          },\n          children: v.value.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"alert\",\n        children: \"No tiene naves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = ListaNaves;\nexport default ListaNaves;\nvar _c;\n$RefreshReg$(_c, \"ListaNaves\");","map":{"version":3,"names":["React","ListaNaves","props","datos","length","map","v","i","a","value","url","funcionNave","name"],"sources":["E:/DAW2/Desarrollo WEB CLIENTE/UNIDAD 5/Práctica506/src/Componentes/ListaNaves.js"],"sourcesContent":["import React from \"react\";\r\n\r\n//Componente que mapea los datos que recibe y pinta la lista de naves de un actor.\r\nfunction ListaNaves(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"box6\" className=\"item2\">\r\n        <h1>Naves</h1>\r\n        {props.datos.length !== 0 ? (\r\n          props.datos.map((v, i, a) => {\r\n            return (\r\n              <p\r\n                className=\"nave\"\r\n                id={v.value.url}\r\n                key={i}\r\n                onClick={() => {\r\n                  props.funcionNave(v.value.url);//Función para obtener los datos de una nave.\r\n                }}\r\n              >\r\n                {v.value.name}\r\n              </p>\r\n            );\r\n          })\r\n        ) : (\r\n          <p className=\"alert\">No tiene naves</p>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ListaNaves;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,SAASC,UAAU,CAACC,KAAK,EAAE;EACzB,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACb;MAAK,EAAE,EAAC,MAAM;MAAC,SAAS,EAAC,OAAO;MAAA,wBAC9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,EACbA,KAAK,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,GACvBF,KAAK,CAACC,KAAK,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;QAC3B,oBACE;UACE,SAAS,EAAC,MAAM;UAChB,EAAE,EAAEF,CAAC,CAACG,KAAK,CAACC,GAAI;UAEhB,OAAO,EAAE,MAAM;YACbR,KAAK,CAACS,WAAW,CAACL,CAAC,CAACG,KAAK,CAACC,GAAG,CAAC,CAAC;UACjC,CAAE;UAAA,UAEDJ,CAAC,CAACG,KAAK,CAACG;QAAI,GALRL,CAAC;UAAA;UAAA;UAAA;QAAA,QAMJ;MAER,CAAC,CAAC,gBAEF;QAAG,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACS;AAErB;AAAC,KA1BQN,UAAU;AA4BnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}