{"ast":null,"code":"var _jsxFileName = \"F:\\\\DAW2\\\\Desarrollo WEB CLIENTE\\\\UNIDAD4\\\\Pr\\xE1cticas\\\\Pr\\xE1ctica407\\\\src\\\\Componentes\\\\Aleatorio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { crearAleatorio } from \"../Biblioteca/Aleatorios/aleatorios.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Aleatorio() {\n  _s();\n  //Valor inicial a vacío;\n  const valorInicial = [];\n\n  //Pongo el estado a valor inicial\n  const [numero, setNumeros] = useState(valorInicial);\n\n  //Función que añade un aleatorio al estado\n  const addNumero = () => {\n    let numeroAleatorio;\n    do {\n      numeroAleatorio = crearAleatorio(1, 100);\n    } while (valorInicial.include(numeroAleatorio));\n    setNumeros([...numero, numeroAleatorio]);\n  };\n\n  //Función que borra un número seleccionado.\n  const borrarNumero = borraNumero => {\n    const nuevoNumero = numero.filter(numero => {\n      return numero !== borraNumero;\n    });\n    setNumeros(nuevoNumero);\n  };\n\n  //Función eliminar todos los números\n  const borrarLista = () => {\n    setNumeros([]);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addNumero();\n      },\n      children: \"Generar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        borrarLista();\n      },\n      children: \"Eliminar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n_s(Aleatorio, \"3i3j+dqx+EcidXDMaOJW0oCf7zM=\");\n_c = Aleatorio;\nexport default Aleatorio;\nvar _c;\n$RefreshReg$(_c, \"Aleatorio\");","map":{"version":3,"names":["React","useState","crearAleatorio","Aleatorio","valorInicial","numero","setNumeros","addNumero","numeroAleatorio","include","borrarNumero","borraNumero","nuevoNumero","filter","borrarLista"],"sources":["F:/DAW2/Desarrollo WEB CLIENTE/UNIDAD4/Prácticas/Práctica407/src/Componentes/Aleatorio.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {crearAleatorio} from \"../Biblioteca/Aleatorios/aleatorios.js\"\n\n\nfunction Aleatorio(){\n\n//Valor inicial a vacío;\n      const valorInicial = [];\n  \n  //Pongo el estado a valor inicial\n  const [numero, setNumeros] = useState(valorInicial);\n\n  //Función que añade un aleatorio al estado\n  const addNumero = () => {\n    let numeroAleatorio; \n    do {\n           numeroAleatorio = crearAleatorio(1,100);\n    } while (valorInicial.include(numeroAleatorio));\n \n    setNumeros([...numero, numeroAleatorio]);\n  };\n\n  //Función que borra un número seleccionado.\n  const borrarNumero = (borraNumero) => {\n    const nuevoNumero = numero.filter((numero) => {\n      return numero!== borraNumero;\n\n    });\n    setNumeros(nuevoNumero);\n  };\n\n  //Función eliminar todos los números\n  const borrarLista = () => {\n    setNumeros([]);\n  };\n\n \n\n\n\n\n    return(\n      <React.Fragment>\n         {/* Botón crear */}\n           <button\n            onClick={() => {\n             \n             \n             addNumero();\n            }}\n          >\n            Generar\n          </button>\n\n          {/* Botón eliminar */}\n          <button\n            onClick={() => {\n              borrarLista();\n              \n            }}\n          >\n            Eliminar\n          </button>\n\n              <p>\n                <ul>\n           \n                </ul>\n              </p>\n         \n            </React.Fragment>\n\n    );\n}\n\nexport default Aleatorio;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,cAAc,QAAO,wCAAwC;AAAA;AAGrE,SAASC,SAAS,GAAE;EAAA;EAEpB;EACM,MAAMC,YAAY,GAAG,EAAE;;EAE3B;EACA,MAAM,CAACC,MAAM,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAACG,YAAY,CAAC;;EAEnD;EACA,MAAMG,SAAS,GAAG,MAAM;IACtB,IAAIC,eAAe;IACnB,GAAG;MACIA,eAAe,GAAGN,cAAc,CAAC,CAAC,EAAC,GAAG,CAAC;IAC9C,CAAC,QAAQE,YAAY,CAACK,OAAO,CAACD,eAAe,CAAC;IAE9CF,UAAU,CAAC,CAAC,GAAGD,MAAM,EAAEG,eAAe,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAME,YAAY,GAAIC,WAAW,IAAK;IACpC,MAAMC,WAAW,GAAGP,MAAM,CAACQ,MAAM,CAAER,MAAM,IAAK;MAC5C,OAAOA,MAAM,KAAIM,WAAW;IAE9B,CAAC,CAAC;IACFL,UAAU,CAACM,WAAW,CAAC;EACzB,CAAC;;EAED;EACA,MAAME,WAAW,GAAG,MAAM;IACxBR,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAOC,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBAEV;MACC,OAAO,EAAE,MAAM;QAGdC,SAAS,EAAE;MACZ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,eAGT;MACE,OAAO,EAAE,MAAM;QACbO,WAAW,EAAE;MAEf,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,eAEL;MAAA,uBACE;QAAA;QAAA;QAAA;MAAA;IAEK;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QAEW;AAG7B;AAAC,GArEQX,SAAS;AAAA,KAATA,SAAS;AAuElB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}