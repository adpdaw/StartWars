{"ast":null,"code":"var _jsxFileName = \"F:\\\\DAW2\\\\Desarrollo WEB CLIENTE\\\\UNIDAD4\\\\Pr\\xE1cticas\\\\Pr\\xE1ctica407\\\\src\\\\Componentes\\\\Aleatorio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { crearAleatorio } from \"../Biblioteca/Aleatorios/aleatorios.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Aleatorio() {\n  _s();\n  //Valor inicial a vacío;\n  const valorInicial = [];\n\n  //Pongo el estado a valor inicial\n  const [numeros, setNumeros] = useState(valorInicial);\n\n  //Función que añade un aleatorio al estado\n  const addNumero = () => {\n    let numeroAleatorio;\n    if (!numeros.includes(numeroAleatorio)) {}\n    numeroAleatorio = crearAleatorio(1, 100);\n    setNumeros([...numeros, numeroAleatorio]);\n  };\n\n  //Función que borra un número seleccionado.\n  const borrarNumero = borraNumero => {\n    const nuevoNumero = numeros.filter(numero => {\n      return numero !== borraNumero;\n    });\n    setNumeros(nuevoNumero);\n  };\n\n  //Función eliminar todos los números\n  const borrarLista = () => {\n    setNumeros([]);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNumero,\n      children: \"Generar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: borrarLista,\n      children: \"Eliminar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: numeros.map(numero => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: numero\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n_s(Aleatorio, \"hVVYeh8Naz41M29vXa9tNi3iuWQ=\");\n_c = Aleatorio;\nexport default Aleatorio;\nvar _c;\n$RefreshReg$(_c, \"Aleatorio\");","map":{"version":3,"names":["React","useState","crearAleatorio","Aleatorio","valorInicial","numeros","setNumeros","addNumero","numeroAleatorio","includes","borrarNumero","borraNumero","nuevoNumero","filter","numero","borrarLista","map"],"sources":["F:/DAW2/Desarrollo WEB CLIENTE/UNIDAD4/Prácticas/Práctica407/src/Componentes/Aleatorio.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {crearAleatorio} from \"../Biblioteca/Aleatorios/aleatorios.js\"\n\n\nfunction Aleatorio(){\n\n//Valor inicial a vacío;\n      const valorInicial = [];\n  \n  //Pongo el estado a valor inicial\n  const [numeros, setNumeros] = useState(valorInicial);\n\n  //Función que añade un aleatorio al estado\n  const addNumero = () => {\n    let numeroAleatorio; \n    if(!numeros.includes(numeroAleatorio)){\n      \n    }\n    numeroAleatorio = crearAleatorio(1,100);\n   \n   \n \n    setNumeros([...numeros, numeroAleatorio]);\n  };\n\n  //Función que borra un número seleccionado.\n  const borrarNumero = (borraNumero) => {\n    const nuevoNumero = numeros.filter((numero) => {\n      return numero!== borraNumero;\n    });\n    setNumeros(nuevoNumero);\n  };\n\n  //Función eliminar todos los números\n  const borrarLista = () => {\n    setNumeros([]);\n  };\n\n    return(\n      <React.Fragment>\n         {/* Botón crear */}\n         <button onClick={addNumero}>Generar</button>\n         <button onClick={borrarLista}>Eliminar</button>\n                <ul>\n                {numeros.map((numero) => {\n            return <li>{numero}</li>;})}\n                </ul>\n            </React.Fragment>\n\n    );\n}\n\nexport default Aleatorio;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,cAAc,QAAO,wCAAwC;AAAA;AAGrE,SAASC,SAAS,GAAE;EAAA;EAEpB;EACM,MAAMC,YAAY,GAAG,EAAE;;EAE3B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAACG,YAAY,CAAC;;EAEpD;EACA,MAAMG,SAAS,GAAG,MAAM;IACtB,IAAIC,eAAe;IACnB,IAAG,CAACH,OAAO,CAACI,QAAQ,CAACD,eAAe,CAAC,EAAC,CAEtC;IACAA,eAAe,GAAGN,cAAc,CAAC,CAAC,EAAC,GAAG,CAAC;IAIvCI,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEG,eAAe,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAME,YAAY,GAAIC,WAAW,IAAK;IACpC,MAAMC,WAAW,GAAGP,OAAO,CAACQ,MAAM,CAAEC,MAAM,IAAK;MAC7C,OAAOA,MAAM,KAAIH,WAAW;IAC9B,CAAC,CAAC;IACFL,UAAU,CAACM,WAAW,CAAC;EACzB,CAAC;;EAED;EACA,MAAMG,WAAW,GAAG,MAAM;IACxBT,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAEC,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBAEZ;MAAQ,OAAO,EAAEC,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eAC5C;MAAQ,OAAO,EAAEQ,WAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eACxC;MAAA,UACCV,OAAO,CAACW,GAAG,CAAEF,MAAM,IAAK;QAC7B,oBAAO;UAAA,UAAKA;QAAM;UAAA;UAAA;UAAA;QAAA,QAAM;MAAC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAG7B;AAAC,GA9CQX,SAAS;AAAA,KAATA,SAAS;AAgDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}