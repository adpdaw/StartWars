{"ast":null,"code":"var _jsxFileName = \"F:\\\\DAW2\\\\Desarrollo WEB CLIENTE\\\\UNIDAD 5\\\\Pr\\xE1ctica506\\\\src\\\\Componentes\\\\Peliculas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/style.css\";\nimport \"../css/normaliza.css\";\nimport { obtenerDatos } from \"../Biblioteca/traerDatos.js\";\nimport ListaPeliculas from \"./ListaPeliculas.js\";\nimport Pelicula from \"./Pelicula\";\nimport ListaActores from \"./ListaActores.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Peliculas() {\n  _s();\n  //Variables e inicializando estados.\n  const url = \"https://swapi.py4e.com/api/films/\";\n  const valorInicial = [];\n  const peliculaInicial = {};\n  const actoresInicial = [];\n  const actorInicial = {};\n  const [peliculas, setPeliculas] = useState(valorInicial);\n  const [pelicula, setPelicula] = useState(peliculaInicial);\n  const [actores, setActores] = useState(actoresInicial);\n  const [actor, setActor] = useState(actorInicial);\n\n  //Traer datos de \n  const getPeliculas = async origen => {\n    let datos = await obtenerDatos(origen);\n    if (!datos.message) {\n      setPeliculas(datos.results);\n    }\n  };\n  let urlActores = [];\n  const getDatosPelicula = async origen => {\n    let datos = await obtenerDatos(origen);\n    urlActores = datos.characters;\n    console.log(datos);\n    if (!datos.message) {\n      setPelicula(datos); //Cambia el estado pinta los datos de la película seleccionada.\n    }\n  };\n\n  useEffect(() => {\n    getPeliculas(url);\n  }, []);\n  const getActores = async origen => {\n    let datos = await obtenerDatos(origen);\n    //console.log(actores.results)\n    //Mapea e introduce en un array todas las url de los actores.\n    let arrayPromesas = datos.character.map((v, i, a) => {\n      console.log(v);\n      //console.log(v.characters);\n      return obtenerDatos(v);\n    });\n    //console.log(arrayPromesas)\n    //Se consume la promesa de promesas con await.\n    const valoresPromesa = await Promise.allSettled(arrayPromesas);\n    //console.log(valoresPromesa);\n    setActores(valoresPromesa);\n  };\n  const getDatosActor = async url => {\n    let datos = await obtenerDatos(url);\n    if (!datos.message) {\n      setActor(datos);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box1\",\n      className: \"item1\",\n      children: /*#__PURE__*/_jsxDEV(ListaPeliculas, {\n        datos: peliculas,\n        funcion: getDatosPelicula,\n        datosActores: actores,\n        funcionActores: getActores()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box2\",\n      className: \"item2\",\n      children: Object.keys(pelicula).length !== 0 ? /*#__PURE__*/_jsxDEV(Pelicula, {\n        datos: pelicula\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 51\n      }, this) //Cambia el estado de película y se pinta\n      : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecciona una Pel\\xEDcula de la lista.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"box3\",\n      className: \"item2\",\n      children: Object.keys(actores).length !== 0 ? /*#__PURE__*/_jsxDEV(ListaActores, {\n        datos: actores,\n        funcion: getDatosActor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 46\n      }, this) //Cambia el estado de película y se pinta\n      : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"=alert\",\n        children: \"No hay Actores en esta pel\\xEDcula\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Peliculas, \"NBiPbBnNCq0FLdwg6S7czpn4RbM=\");\n_c = Peliculas;\nexport default Peliculas;\nvar _c;\n$RefreshReg$(_c, \"Peliculas\");","map":{"version":3,"names":["React","useState","useEffect","obtenerDatos","ListaPeliculas","Pelicula","ListaActores","Peliculas","url","valorInicial","peliculaInicial","actoresInicial","actorInicial","peliculas","setPeliculas","pelicula","setPelicula","actores","setActores","actor","setActor","getPeliculas","origen","datos","message","results","urlActores","getDatosPelicula","characters","console","log","getActores","arrayPromesas","character","map","v","i","a","valoresPromesa","Promise","allSettled","getDatosActor","Object","keys","length"],"sources":["F:/DAW2/Desarrollo WEB CLIENTE/UNIDAD 5/Práctica506/src/Componentes/Peliculas.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/style.css\";\r\nimport \"../css/normaliza.css\";\r\nimport { obtenerDatos} from \"../Biblioteca/traerDatos.js\";\r\nimport ListaPeliculas from \"./ListaPeliculas.js\";\r\nimport Pelicula from \"./Pelicula\";\r\nimport ListaActores from \"./ListaActores.js\";\r\n\r\n\r\n\r\nfunction Peliculas() {\r\n\r\n    //Variables e inicializando estados.\r\n    const url = \"https://swapi.py4e.com/api/films/\";\r\n    const valorInicial = [];\r\n    const peliculaInicial = {};\r\n    const actoresInicial = [];\r\n    const actorInicial = {};\r\n\r\n    const  [peliculas, setPeliculas] = useState(valorInicial);\r\n    const  [pelicula , setPelicula] = useState(peliculaInicial);\r\n    const [actores, setActores] = useState(actoresInicial);\r\n    const [actor, setActor] = useState(actorInicial);\r\n   \r\n\r\n    //Traer datos de \r\n    const getPeliculas = async(origen)=>{\r\n        let datos = await obtenerDatos(origen);\r\n        if(!datos.message){\r\n            setPeliculas(datos.results);\r\n           \r\n        }\r\n    };\r\n\r\n    let urlActores = [];\r\n    const getDatosPelicula = async (origen) =>{\r\n        let datos = await obtenerDatos(origen);\r\n        urlActores= datos.characters;\r\n        console.log(datos)\r\n        if(!datos.message){\r\n            setPelicula(datos);//Cambia el estado pinta los datos de la película seleccionada.\r\n            \r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getPeliculas(url);\r\n    },[]);\r\n\r\n\r\n    const getActores = async(origen) =>{\r\n        let datos= await obtenerDatos(origen);\r\n        //console.log(actores.results)\r\n        //Mapea e introduce en un array todas las url de los actores.\r\n        let arrayPromesas = datos.character.map((v,i,a)=>{\r\n          console.log(v)\r\n          //console.log(v.characters);\r\n          return obtenerDatos(v)\r\n        });\r\n        //console.log(arrayPromesas)\r\n        //Se consume la promesa de promesas con await.\r\n            const valoresPromesa = await Promise.allSettled(arrayPromesas);\r\n            //console.log(valoresPromesa);\r\n            setActores(valoresPromesa);\r\n            \r\n        };\r\n        const getDatosActor = async (url)=>{\r\n            let datos = await obtenerDatos(url);\r\n            if(!datos.message){\r\n                setActor(datos);\r\n            }\r\n          };\r\n\r\n   \r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n        <div id=\"box1\" className=\"item1\">\r\n            <ListaPeliculas datos={peliculas} funcion={getDatosPelicula} datosActores={actores} funcionActores={getActores()}/> \r\n        </div>\r\n        <div id=\"box2\" className=\"item2\">\r\n            {Object.keys(pelicula).length !== 0 ?(<Pelicula datos={pelicula}/>//Cambia el estado de película y se pinta\r\n            ):(<p>Selecciona una Película de la lista.</p>)}\r\n        </div>\r\n        <div id=\"box3\" className=\"item2\">\r\n        {Object.keys(actores).length !== 0 ?(<ListaActores  datos={actores} funcion={getDatosActor}/>//Cambia el estado de película y se pinta\r\n            ):(<p className='=alert'>No hay Actores en esta película</p>)}  \r\n      </div>\r\n       \r\n\r\n\r\n\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Peliculas;"],"mappings":"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"},"metadata":{},"sourceType":"module"}