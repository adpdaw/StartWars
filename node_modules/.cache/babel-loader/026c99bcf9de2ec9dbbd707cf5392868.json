{"ast":null,"code":"var _jsxFileName = \"/media/ciclost/Extreme SSD/DAW2/Desarrollo WEB CLIENTE/UNIDAD4/Pr\\xE1cticas/Pr\\xE1ctica407/src/Biblioteca/Aleatorios/Aleatorio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n//Función que crea aleatorios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Aleatorio() {\n  _s();\n  function crearAleatorio(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  ;\n\n  //Valor inicial a vacío;\n  function serieNumeros() {\n    const valorInicial = [];\n  }\n  ;\n\n  //Pongo el estado a valor inicial\n  const [numero, setNumeros] = useState(serieNumeros);\n\n  //Función que añade un aleatorio al estado\n  const addNumero = () => {\n    let numeroAleatorio = crearAleatorio(1, 100);\n    if (numeroAleatorio.include) {}\n    setNumeros([...numero, numeroAleatorio]);\n  };\n\n  //Función que borra un número seleccionado.\n  const borrarNumero = numeroNuevo => {\n    const nuevoNumero = numero.filter(numero => {\n      return numero !== nuevoNumero;\n    });\n    setNumeros(nuevoNumero);\n  };\n\n  //Función eliminar todos los números\n  const borrarLista = () => {\n    setNumeros([]);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this);\n        addNumero();\n      },\n      children: \"Generar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        borrarLista();\n      },\n      children: \"Eliminar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s(Aleatorio, \"mbkudqQWbuwTaIPlY1EVK5SrcyE=\");\n_c = Aleatorio;\nexport default Aleatorio;\nvar _c;\n$RefreshReg$(_c, \"Aleatorio\");","map":{"version":3,"names":["React","useState","Aleatorio","crearAleatorio","min","max","Math","ceil","floor","random","serieNumeros","valorInicial","numero","setNumeros","addNumero","numeroAleatorio","include","borrarNumero","numeroNuevo","nuevoNumero","filter","borrarLista"],"sources":["/media/ciclost/Extreme SSD/DAW2/Desarrollo WEB CLIENTE/UNIDAD4/Prácticas/Práctica407/src/Biblioteca/Aleatorios/Aleatorio.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\n//Función que crea aleatorios\nfunction Aleatorio(){\n    function crearAleatorio(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n//Valor inicial a vacío;\n  function serieNumeros(){\n      const valorInicial = [];\n  };\n\n  //Pongo el estado a valor inicial\n  const [numero, setNumeros] = useState(serieNumeros);\n\n  //Función que añade un aleatorio al estado\n  const addNumero = () => {\n    let numeroAleatorio = crearAleatorio(1,100);\n    if (numeroAleatorio.include) {\n      \n    }\n    setNumeros([...numero, numeroAleatorio]);\n  };\n\n  //Función que borra un número seleccionado.\n  const borrarNumero = (numeroNuevo) => {\n    const nuevoNumero = numero.filter((numero) => {\n      return numero!== nuevoNumero;\n    });\n    setNumeros(nuevoNumero);\n  };\n\n  //Función eliminar todos los números\n  const borrarLista = () => {\n    setNumeros([]);\n  };\n\n \n\n\n\n\n    return(\n      <React.Fragment>\n         {/* Botón crear */}\n           <button\n            onClick={() => {\n              <p>\n                <ul>\n                  <li>\n                 \n                  </li>\n                </ul>\n              </p>\n             \n             addNumero();\n            }}\n          >\n            Generar\n          </button>\n\n          {/* Botón eliminar */}\n          <button\n            onClick={() => {\n              borrarLista();\n              \n            }}\n          >\n            Eliminar\n          </button>\n         \n            </React.Fragment>\n\n    );\n}\n\nexport default Aleatorio;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAGvC;AAAA;AACA,SAASC,SAAS,GAAE;EAAA;EAChB,SAASC,cAAc,CAACC,GAAG,EAAEC,GAAG,EAAE;IAClCD,GAAG,GAAGE,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC;IACpBC,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACH,GAAG,CAAC;IACrB,OAAOC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,MAAM,EAAE,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;EAC1D;EAAC;;EAEH;EACE,SAASM,YAAY,GAAE;IACnB,MAAMC,YAAY,GAAG,EAAE;EAC3B;EAAC;;EAED;EACA,MAAM,CAACC,MAAM,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACS,YAAY,CAAC;;EAEnD;EACA,MAAMI,SAAS,GAAG,MAAM;IACtB,IAAIC,eAAe,GAAGZ,cAAc,CAAC,CAAC,EAAC,GAAG,CAAC;IAC3C,IAAIY,eAAe,CAACC,OAAO,EAAE,CAE7B;IACAH,UAAU,CAAC,CAAC,GAAGD,MAAM,EAAEG,eAAe,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAME,YAAY,GAAIC,WAAW,IAAK;IACpC,MAAMC,WAAW,GAAGP,MAAM,CAACQ,MAAM,CAAER,MAAM,IAAK;MAC5C,OAAOA,MAAM,KAAIO,WAAW;IAC9B,CAAC,CAAC;IACFN,UAAU,CAACM,WAAW,CAAC;EACzB,CAAC;;EAED;EACA,MAAME,WAAW,GAAG,MAAM;IACxBR,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAOC,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBAEV;MACC,OAAO,EAAE,MAAM;QACb;UAAA,uBACE;YAAA,uBACE;cAAA;cAAA;cAAA;YAAA;UAEK;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA,QACH;QAELC,SAAS,EAAE;MACZ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,eAGT;MACE,OAAO,EAAE,MAAM;QACbO,WAAW,EAAE;MAEf,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK;EAAA;IAAA;IAAA;IAAA;EAAA,QAEU;AAG7B;AAAC,GA1EQnB,SAAS;AAAA,KAATA,SAAS;AA4ElB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}